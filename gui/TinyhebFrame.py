# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Mon Feb  2 15:13:16 2015

import wx

from StammdatenListCtrl import StammdatenListCtrl

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

class TinyhebFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: TinyhebFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.main_notebook = wx.Notebook(self, -1, style=0)
        self.main_notebook_pane_stammdaten = wx.Panel(self.main_notebook, -1)

        # Menu Bar
        self.tinyheb_frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.NewId(), "Sicherung erstellen", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), "Sicherung wiederherstellen", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(wx.ID_EXIT, "Beenden", "tinyheb beenden", wx.ITEM_NORMAL)
        self.tinyheb_frame_menubar.Append(wxglade_tmp_menu, "Datei")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.NewId(), "Handbuch", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.ID_ABOUT, u"Ãœber tinyheb", "", wx.ITEM_NORMAL)
        self.tinyheb_frame_menubar.Append(wxglade_tmp_menu, "Hilfe")
        self.SetMenuBar(self.tinyheb_frame_menubar)
        # Menu Bar end
        self.tinyheb_frame_statusbar = self.CreateStatusBar(1, 0)

        # Tool Bar
        self.tinyheb_frame_toolbar = wx.ToolBar(self, -1, style=wx.TB_HORIZONTAL|wx.TB_TEXT)
        self.SetToolBar(self.tinyheb_frame_toolbar)
        self.tinyheb_frame_toolbar.AddLabelTool(wx.NewId(), "Rechnungsposten\nerfassen", (wx.ArtProvider.GetBitmap(wx.ART_NEW, wx.ART_TOOLBAR)), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.tinyheb_frame_toolbar.AddLabelTool(wx.NewId(), "Neues\nStammdatum", (wx.ArtProvider.GetBitmap(wx.ART_NEW_DIR, wx.ART_TOOLBAR)), wx.NullBitmap, wx.ITEM_NORMAL, "Neues Stammdatum", "Neues Stammdatum anlegen")
        self.tinyheb_frame_toolbar.AddLabelTool(wx.NewId(), "Datensicherung", (wx.ArtProvider.GetBitmap(wx.ART_FILE_SAVE, wx.ART_TOOLBAR)), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.tinyheb_frame_toolbar.AddSeparator()
        self.tinyheb_frame_toolbar.AddLabelTool(wx.NewId(), "Beenden", (wx.ArtProvider.GetBitmap(wx.ART_QUIT, wx.ART_TOOLBAR)), wx.NullBitmap, wx.ITEM_NORMAL, "tinyheb beenden", "tinyheb beenden")
        # Tool Bar end
        self.main_notebook_pane_abrechnung = wx.Panel(self.main_notebook, -1)
        self.main_notebook_pane_einstellungen = wx.Panel(self.main_notebook, -1)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.onExit, id=wx.ID_EXIT)
        self.Bind(wx.EVT_TOOL, self.onExit, id=-1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: TinyhebFrame.__set_properties
        self.tinyheb_frame_statusbar.SetStatusWidths([-1])
        # statusbar fields
        tinyheb_frame_statusbar_fields = ["tinyheb_frame_statusbar"]
        for i in range(len(tinyheb_frame_statusbar_fields)):
            self.tinyheb_frame_statusbar.SetStatusText(tinyheb_frame_statusbar_fields[i], i)
        self.tinyheb_frame_toolbar.Realize()
        # end wxGlade

        self.SetTitle("tinyHeb")
        self.stammdaten_list_ctrl = StammdatenListCtrl(
            self.main_notebook_pane_stammdaten)

    def __do_layout(self):
        # begin wxGlade: TinyhebFrame.__do_layout
        main_sizer = wx.BoxSizer(wx.VERTICAL)
        stammdaten_sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.main_notebook_pane_stammdaten.SetSizer(stammdaten_sizer)
        self.main_notebook.AddPage(self.main_notebook_pane_stammdaten, "Stammdaten")
        self.main_notebook.AddPage(self.main_notebook_pane_abrechnung, "Abrechnung")
        self.main_notebook.AddPage(self.main_notebook_pane_einstellungen, "Einstellungen")
        main_sizer.Add(self.main_notebook, 1, wx.EXPAND, 0)
        self.SetSizer(main_sizer)
        main_sizer.Fit(self)
        self.Layout()
        # end wxGlade

        stammdaten_sizer.Add(self.stammdaten_list_ctrl, 1, wx.EXPAND, 0)

    def onExit(self, event): # wxGlade: TinyhebFrame.<event_handler>
        self.Close()
        event.Skip()

# end of class TinyhebFrame
