<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Thomas.familie.esche.gramer" name="Default test" tests="24" failures="0" timestamp="27 Nov 2016 14:51:34 GMT" time="0.117" errors="0">
  <testcase name="@BeforeMethod setUp" time="0.0" classname="org.tinyheb.mobile.activity.MainActivityTests">
    <failure type="java.lang.UnsatisfiedLinkError" message="android.util.Log.isLoggable(Ljava/lang/String;I)Z">
      <![CDATA[java.lang.UnsatisfiedLinkError: android.util.Log.isLoggable(Ljava/lang/String;I)Z
	at android.util.Log.isLoggable(Native Method)
	at android.os.StrictMode.<clinit>(StrictMode.java:120)
	at android.app.Activity.<init>(Activity.java:789)
	at org.tinyheb.mobile.activity.AbstractActivity.<init>(AbstractActivity.java:16)
	at org.tinyheb.mobile.activity.MainActivity.<init>(MainActivity.java:14)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.robolectric.util.ReflectionHelpers.callConstructor(ReflectionHelpers.java:285)
	at org.robolectric.Robolectric.buildActivity(Robolectric.java:92)
	at org.robolectric.Robolectric.buildActivity(Robolectric.java:88)
	at org.tinyheb.mobile.activity.MainActivityTests.setUp(MainActivityTests.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:585)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="org.tinyheb.mobile.activity.MainActivityTests">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="org.tinyheb.mobile.activity.MainActivityTests">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="org.tinyheb.mobile.activity.MainActivityTests">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="org.tinyheb.mobile.activity.MainActivityTests">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="testStartSynchronizeButton" time="0.001" classname="org.tinyheb.mobile.activity.MainActivityTests">
    <skipped/>
  </testcase> <!-- testStartSynchronizeButton -->
  <testcase name="testStartPatronShowButton" time="0.0" classname="org.tinyheb.mobile.activity.MainActivityTests">
    <skipped/>
  </testcase> <!-- testStartPatronShowButton -->
  <testcase name="testAPIServerSearchResultHandling" time="0.001" classname="org.tinyheb.mobile.activity.MainActivityTests">
    <skipped/>
  </testcase> <!-- testAPIServerSearchResultHandling -->
  <testcase name="testStartPatronInsertButton" time="0.001" classname="org.tinyheb.mobile.activity.MainActivityTests">
    <skipped/>
  </testcase> <!-- testStartPatronInsertButton -->
  <testcase name="testWifiConnectionChangeEventHandling" time="0.0" classname="org.tinyheb.mobile.activity.MainActivityTests">
    <skipped/>
  </testcase> <!-- testWifiConnectionChangeEventHandling -->
  <testcase name="ValidIPAddressTest" time="0.003" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="ValidIPAddressTest" time="0.001" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="ValidIPAddressTest" time="0.001" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="ValidIPAddressTest" time="0.0" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="ValidIPAddressTest" time="0.001" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="ValidIPAddressTest" time="0.001" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="ValidIPAddressTest" time="0.0" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="InValidIPAddressTest" time="0.001" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="InValidIPAddressTest" time="0.001" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="InValidIPAddressTest" time="0.0" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="InValidIPAddressTest" time="0.001" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="InValidIPAddressTest" time="0.0" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="InValidIPAddressTest" time="0.0" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="InValidIPAddressTest" time="0.001" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="InValidIPAddressTest" time="0.001" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="InValidIPAddressTest" time="0.001" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="InValidIPAddressTest" time="0.001" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="InValidIPAddressTest" time="0.0" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
  <testcase name="InValidIPAddressTest" time="0.0" classname="org.tinyheb.utils.ServerAdressResolverTest"/>
</testsuite> <!-- Default test -->
